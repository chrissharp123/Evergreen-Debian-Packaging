#!/bin/bash
VERSION_=0.01

WORKDIR="/home/opensrf/develop/evergreen2/current"
BUILDFILESDIR="${WORKDIR}/files_for_build"
PKGFILE="Evergreen-ILS-2.0.6.tar.gz"
PKGNAME="Evergreen-ILS-2.0.6"
NEWPKGFILE="evergreen-ils-2.0.6.tar.gz"
NEWPKGNAME="evergreen-ils-2.0.6"

JS_TAR="js-1.7.0.tar.gz"
JS_PERL_TAR="JavaScript-SpiderMonkey-0.19.tar.gz"
LIBDBI_TAR="libdbi-0.8.3.tar.gz"
LIBDBI_DRIVERS_TAR="libdbi-drivers-0.8.3.tar.gz"







EVERGREEN_PREFIX="/openils"
ORIG_FOLDER="/home/opensrf/develop/evergreen2/"
ORIG_PKGFILE="/home/opensrf/develop/evergreen2/${PKGFILE}"
SOURCE_FOLDER="${WORKDIR}/$(echo $NEWPKGFILE|awk -F".tar" '{ print $1 }')"
DEST_ROOT="${SOURCE_FOLDER}/debian/evergreen-ils"
export DEBEMAIL="$(grep @ ${BUILDFILESDIR}/control|awk -F"[<>]" '{ print $2 }')"
export DEBFULLNAME="$(grep @ ${BUILDFILESDIR}/control|awk -F"[<>:]" '{ print $2 }')"

cd $WORKDIR

if [ ! -e "$ORIG_PKGFILE" ]
        then
        echo "$ORIG_PKGFILE not found exiting..."
        echo
        exit 1
fi

if [ "$1" = "b" ] || [ "$1" = "-b" ]
        then
        echo
        echo "Not including Source"
        echo
        BuildPackage () {
        echo
        echo "Running dpkg-build-package -b -nc"
        sleep 1
        dpkg-buildpackage -b -nc
        }
                else
                BuildPackage () {
                echo
                echo "Running dpkg-build-package -F -nc"
                sleep 1
                dpkg-buildpackage -F -nc
                }
fi

rm -f ${WORKDIR}/*.changes
rm -f ${WORKDIR}/*.dsc
rm -f ${WORKDIR}/*.deb
rm -f ${WORKDIR}/*.gz && echo "Removed old package files"
rm -rf $SOURCE_FOLDER && echo "Removed $SOURCE_FOLDER" && \
sleep 1 && \
echo ">>>Untarring: ${PKGNAME}"
tar zxf ${ORIG_PKGFILE} -C ${WORKDIR} && \
mv ${WORKDIR}/${PKGNAME} ${WORKDIR}/${NEWPKGNAME}


#cp ${ORIG_FOLDER}/$JS_TAR ${WORKDIR}/${NEWPKGNAME}
#cp ${ORIG_FOLDER}/$JS_PERL_TAR ${WORKDIR}/${NEWPKGNAME}
#cp ${ORIG_FOLDER}/$LIBDBI_TAR ${WORKDIR}/${NEWPKGNAME}
#cp ${ORIG_FOLDER}/$LIBDBI_DRIVERS_TAR ${WORKDIR}/${NEWPKGNAME}


#pushd ${WORKDIR}/${NEWPKGNAME}
#tar -xvzf $JS_TAR
#tar -xvzf $JS_PERL_TAR
#tar -xvzf $LIBDBI_TAR
#tar -xvzf $LIBDBI_DRIVERS_TAR
#popd


#sleep 10





cp -f ${ORIG_PKGFILE} ${WORKDIR}/${NEWPKGFILE} && \
cd $SOURCE_FOLDER && \
#ln -s Open-ILS open-ils && \
cd $SOURCE_FOLDER && \
#ln -s Open-ILS open-ils && \
# make -f Open-ILS/src/extras/Makefile.install debian-lenny && \
#tar zcvf ${WORKDIR}/${NEWPKGFILE} $SOURCE_FOLDER
echo "Running dh_make on $NEWPKGFILE" && \
sleep 1 && \
#dh_make -s -f ../${NEWPKGFILE} && \
dh_make -s -n
echo "Restoring rules file." && \
sleep 2 && \
mkdir -p ${SOURCE_FOLDER}/DEBIAN/evergreen-ils/etc/init.d && \
mkdir -p ${SOURCE_FOLDER}/debian/evergreen-ils/etc/init.d && \

cp ${BUILDFILESDIR}/rules ${SOURCE_FOLDER}/debian/rules && \
cp ${BUILDFILESDIR}/control ${SOURCE_FOLDER}/debian/control && \
cp ${BUILDFILESDIR}/CONTROL ${SOURCE_FOLDER}/DEBIAN/control && \
cp ${BUILDFILESDIR}/config ${SOURCE_FOLDER}/debian/config && \
cp ${BUILDFILESDIR}/config ${SOURCE_FOLDER}/DEBIAN/config && \
cp ${BUILDFILESDIR}/postinst ${SOURCE_FOLDER}/debian/postinst && \
cp ${BUILDFILESDIR}/postinst ${SOURCE_FOLDER}/DEBIAN/postinst && \
#cp -p ${BUILDFILESDIR}/eg_evergreen ${SOURCE_FOLDER}/examples && \
cp ${BUILDFILESDIR}/postrm ${SOURCE_FOLDER}/debian/postrm && \
cp ${BUILDFILESDIR}/postrm ${SOURCE_FOLDER}/DEBIAN/postrm && \
#cp ${BUILDFILESDIR}/prerm ${SOURCE_FOLDER}/debian/prerm && \
#cp ${BUILDFILESDIR}/prerm ${SOURCE_FOLDER}/DEBIAN/prerm && \
cp ${BUILDFILESDIR}/templates ${SOURCE_FOLDER}/debian/templates && \
cp ${BUILDFILESDIR}/templates ${SOURCE_FOLDER}/DEBIAN/templates && \
cp ${BUILDFILESDIR}/eg_database ${SOURCE_FOLDER}/debian/evergreen-ils/etc/init.d && \
cp ${BUILDFILESDIR}/eg_database ${SOURCE_FOLDER}/DEBIAN/evergreen-ils/etc/init.d && \

echo && \
sed -i 's^$(perldir)^$(DESTDIR)$(perldir)^g'  ${SOURCE_FOLDER}/Open-ILS/src/Makefile.am
#sed -i 's^$(TEMPLATEDIR)^$(DESTDIR)$(TEMPLATEDIR)^g'  ${SOURCE_FOLDER}/Open-ILS/src/Makefile.am
sed -i 's^$(perldir)^$(DESTDIR)$(perldir)^g'  ${SOURCE_FOLDER}/Open-ILS/src/Makefile.in
#sed -i 's^$(TEMPLATEDIR)^$(DESTDIR)$(TEMPLATEDIR)^g'  ${SOURCE_FOLDER}/Open-ILS/src/Makefile.in
####sed -i 's^$(MKDIR_P) $(DESTDIR)$(reportsdir)^$(MKDIR_P) $(reportsdir)^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.am
####sed -i 's^$(MKDIR_P) $(DESTDIR)$(reportsdir)^$(MKDIR_P) $(reportsdir)^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.in
#sed -i 's^rm -f $(DESTDIR)$(reportsdir)/fm_IDL.xml^rm -f $(reportsdir)/fm_IDL.xml^g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.in
#sed -i 's^rm -f $(DESTDIR)$(reportsdir)/fm_IDL.xml^rm -f $(reportsdir)/fm_IDL.xml^g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.am

#sed -i 's^reportsdir = $(DESTDIR)$(WEBDIR)/reports/^reportsdir = $(DESTDIR)$(WEBDIR)/reports^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.in
#sed -i 's^reportsdir = $(DESTDIR)$(WEBDIR)/reports/^reportsdir = $(DESTDIR)$(WEBDIR)/reports^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.am
####sed -i 's^$(WEBDIR)/reports/^$(WEBDIR)/reports^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.in
####sed -i 's^$(WEBDIR)/reports/^$(WEBDIR)/reports^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.am
####sed -i 's^$(MKDIR_P) "$(DESTDIR)$(reportsdir)"^$(MKDIR_P) "$(reportsdir)"^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.in
sed -i 's^reportsdir = $(DESTDIR)$(WEBDIR)/reports^reportsdir = $(WEBDIR)/reports^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.in
sed -i 's^reportsdir = $(DESTDIR)$(WEBDIR)/reports^reportsdir = $(WEBDIR)/reports^g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.am



#for building the staff client, wants to install it in /openils/var/web/xul on the *build* system

#first off, someone used {} instead of () for 1 instance of WEBDIR
sed -i 's^${WEBDIR}^$(WEBDIR)^g' ${SOURCE_FOLDER}/Open-ILS/xul/staff_client/Makefile.in
sed -i 's^${WEBDIR}^$(WEBDIR)^g' ${SOURCE_FOLDER}/Open-ILS/xul/staff_client/Makefile.am
#now fix the path
sed -i 's^$(WEBDIR)^$(DESTDIR)$(WEBDIR)^g' ${SOURCE_FOLDER}/Open-ILS/xul/staff_client/Makefile.in
sed -i 's^$(WEBDIR)^$(DESTDIR)$(WEBDIR)^g' ${SOURCE_FOLDER}/Open-ILS/xul/staff_client/Makefile.am


sed -i 's/$(DESTDIR)$(oilsincludedir)/$(oilsincludedir)/g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.am
sed -i 's/$(DESTDIR)$(oilsincludedir)/$(oilsincludedir)/g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.in
#sed -i 's/$(DESTDIR)$(reportsdir)/$(reportsdir)/g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.am
#sed -i 's/$(DESTDIR)$(reportsdir)/$(reportsdir)/g' ${SOURCE_FOLDER}/Open-ILS/web/Makefile.in
sed -i 's/opensrf.xml.example/opensrf.xml.evergreen.example/g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.in
sed -i 's/opensrf.xml.example/opensrf.xml.evergreen.example/g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.am
sed -i 's/opensrf_core.xml.example/opensrf_core.xml.evergreen.example/g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.in
sed -i 's/opensrf_core.xml.example/opensrf_core.xml.evergreen.example/g' ${SOURCE_FOLDER}/Open-ILS/src/Makefile.am
mv ${SOURCE_FOLDER}/Open-ILS/examples/opensrf.xml.example ${SOURCE_FOLDER}/Open-ILS/examples/opensrf.xml.evergreen.example
mv ${SOURCE_FOLDER}/Open-ILS/examples/opensrf_core.xml.example ${SOURCE_FOLDER}/Open-ILS/examples/opensrf_core.xml.evergreen.example
mkdir -p ${SOURCE_FOLDER}/debian/evergreen-ils/etc/apache2/sites-available
cp -Rv ${SOURCE_FOLDER}/Open-ILS/examples/apache/eg.conf       ${SOURCE_FOLDER}/debian/evergreen-ils/etc/apache2/sites-available/
cp -Rv ${SOURCE_FOLDER}/Open-ILS/examples/apache/eg_vhost.conf ${SOURCE_FOLDER}/debian/evergreen-ils/etc/apache2/
cp -Rv ${SOURCE_FOLDER}/Open-ILS/examples/apache/startup.pl    ${SOURCE_FOLDER}/debian/evergreen-ils/etc/apache2/

#fix apxs2 install stuff
APACHE_CONF=${DEST_ROOT}/etc/apache2/
APACHE_MODS=${DEST_ROOT}/usr/lib/apache2/modules/
mkdir -pv $APACHE_CONF
mkdir -pv $APACHE_MODS
mkdir -pv ${DEST_ROOT}/etc/apache2/mods-available
###(APXS2) -i -a @srcdir@/mod_xmlent.la
###Open-ILS/src/apachemods
APACHE_IN=${SOURCE_FOLDER}/Open-ILS/src/apachemods/Makefile.in
APACHE_AM=${SOURCE_FOLDER}/Open-ILS/src/apachemods/Makefile.am
sed -i "s^(APXS2) -i -a @srcdir@/mod_xmlent.la^(APXS2) -S LIBEXECDIR='$APACHE_MODS' -S SYSCONFDIR='$APACHE_CONF' -i -a @srcdir@/mod_xmlent.la^g" ${APACHE_IN}
sed -i "s^(APXS2) -i -a @srcdir@/mod_xmlent.la^(APXS2) -S LIBEXECDIR='$APACHE_MODS' -S SYSCONFDIR='$APACHE_CONF' -i -a @srcdir@/mod_xmlent.la^g" ${APACHE_AM}
sed -i "s^(APXS2) -i -a @srcdir@/mod_idlchunk.la^(APXS2) -S LIBEXECDIR='$APACHE_MODS' -S SYSCONFDIR='$APACHE_CONF' -i -a @srcdir@/mod_idlchunk.la^g" ${APACHE_IN}
sed -i "s^(APXS2) -i -a @srcdir@/mod_idlchunk.la^(APXS2) -S LIBEXECDIR='$APACHE_MODS' -S SYSCONFDIR='$APACHE_CONF' -i -a @srcdir@/mod_ididllchunk.la^g" ${APACHE_AM}

#fix apache .load path screwups

###TODO:NOT WORKING!
echo "LoadModule xmlent_module      /usr/lib/apache2/modules/mod_xmlent.so" > "${DEST_ROOT}/etc/apache2/mods-available/xmlent.load"



#SUPPORT SCRIPTS:
mkdir -p "${DEST_ROOT}${EVERGREEN_PREFIX}/bin"
mkdir -p "${DEST_ROOT}${EVERGREEN_PREFIX}/share/doc/examples/"
cp -r ${SOURCE_FOLDER}/Open-ILS/src/support-scripts/* "${DEST_ROOT}${EVERGREEN_PREFIX}/bin/"
cp -r ${SOURCE_FOLDER}/Open-ILS/src/sql "${DEST_ROOT}${EVERGREEN_PREFIX}/share/doc/examples/"
#cp -r ${SOURCE_FOLDER}/Open-ILS/src/extras/eg_config ${DEST_ROOT}/${EVERGREEN_PREFIX}/conf
###Fix eg_db_confg.pl
#< my $eg_config = File::Spec->catfile($script_dir, 'eg_config');
#> my $eg_config = File::Spec->catfile($script_dir, '../extras/eg_config');
#<       $build_db_sh = File::Spec->catfile($script_dir, '../share/doc/examples/sql/Pg/build-db.sh');
#>       $build_db_sh = File::Spec->catfile($script_dir, '../sql/Pg/build-db.sh');
sed -i "s^../extras/eg_config^eg_config^g" ${DEST_ROOT}/openils/bin/eg_db_config.pl
sed -i "s^../sql/Pg/build-db.sh^../share/doc/examples/sql/Pg/build-db.sh^g" ${DEST_ROOT}/openils/bin/eg_db_config.pl

mkdir -p ${DEST_ROOT}/etc/ld.so.conf.d
echo "/usr/lib/dbd" > ${DEST_ROOT}/etc/ld.so.conf.d/eg.conf
###################################################
#This is for integrating libdbi and spidermonkey with this deb. Currently *NOT* working
#cp ${ORIG_FOLDER}/$JS_TAR ${WORKDIR}/${NEWPKGNAME}
#cp ${ORIG_FOLDER}/$JS_PERL_TAR ${WORKDIR}/${NEWPKGNAME}
#cp ${ORIG_FOLDER}/$LIBDBI_TAR ${WORKDIR}/${NEWPKGNAME}
#cp ${ORIG_FOLDER}/$LIBDBI_DRIVERS_TAR ${WORKDIR}/${NEWPKGNAME}
#pushd ${WORKDIR}/${NEWPKGNAME}
#echo ">>>Untarring: Spidermonkey and LIBDBI"
#tar -xzf $JS_TAR
#tar -xzf $JS_PERL_TAR
#tar -xzf $LIBDBI_TAR
#tar -xzf $LIBDBI_DRIVERS_TAR
#popd
#####################################################

echo
echo "Source Folder is: ${SOURCE_FOLDER}"
sleep 3
BuildPackage

cd $WORKDIR

